---
name: Release

on:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-data:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.fetch.outputs.result }}
    steps:
      - id: fetch
        uses: oxidize-rb/actions/fetch-ci-data@v1
        with:
          stable-ruby-versions: |
            exclude: [head, "3.0"]
          supported-ruby-platforms: |
            exclude: [x64-mingw32]

  build:
    name: Build native gems
    needs: ci-data
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-platform: ${{ fromJSON(needs.ci-data.outputs.result).supported-ruby-platforms }}
    steps:
      - uses: actions/checkout@v3

      - uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: "3.2"
          bundler-cache: false
          cargo-cache: true
          cargo-vendor: true
          cache-version: v1-${{ matrix.ruby-platform }}

      - uses: oxidize-rb/actions/cross-gem@v1
        id: cross-gem
        with:
          platform: ${{ matrix.ruby-platform }}
          ruby-versions: ${{ join(fromJSON(needs.ci-data.outputs.result).stable-ruby-versions, ', ') }}

      - uses: actions/upload-artifact@v2
        with:
          name: cross-gem
          path: ${{ steps.cross-gem.outputs.gem-path }}

      - name: Smoke gem install
        if: matrix.ruby-platform == 'x86_64-linux' # GitHub actions architecture
        run: |
          gem install pkg/bluejay-*.gem --verbose
          script="puts Bluejay.parse('{ foo }')"
          ruby -rbluejay -e "$script" | grep true
          echo "âœ… Successfully gem installed"

  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true
          cargo-cache: true
          cache-version: v1

      - name: Ensure version matches the tag
        run: |
          GEM_VERSION=$(grep VERSION lib/bluejay/version.rb | head -n 1 | cut -d'"' -f2)
          if [ "v$GEM_VERSION" != "${{ github.ref_name }}" ]; then
            echo "Gem version does not match tag"
            echo "  v$GEM_VERSION != ${{ github.ref_name }}"
            exit 1
          fi

      - uses: actions/download-artifact@v3
        with:
          name: cross-gem
          path: pkg

      - name: Push Gem
        working-directory: pkg/
        env:
          GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_KEY }}
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          ls -l
          for i in *.gem; do
            if [ -f "$i" ]; then
              if ! gem push "$i" >push.out; then
                gemerr=$?
                sed 's/^/::error:: /' push.out
                if ! grep -q "Repushing of gem" push.out; then
                  exit $gemerr
                fi
              fi
            fi
          done
