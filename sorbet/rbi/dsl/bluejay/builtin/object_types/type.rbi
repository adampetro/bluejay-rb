# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Bluejay::Builtin::ObjectTypes::Type`.
# Please instead update this file by running `bin/tapioca dsl Bluejay::Builtin::ObjectTypes::Type`.

module Bluejay::Builtin::ObjectTypes::Type::Interface
  abstract!

  sig { abstract.returns(T.nilable(String)) }
  def description; end

  sig do
    abstract
      .params(
        include_deprecated: T.nilable(T::Boolean)
      ).returns(T.nilable(T::Array[Bluejay::Builtin::ObjectTypes::EnumValue::Interface]))
  end
  def enum_values(include_deprecated:); end

  sig do
    abstract
      .params(
        include_deprecated: T.nilable(T::Boolean)
      ).returns(T.nilable(T::Array[Bluejay::Builtin::ObjectTypes::Field::Interface]))
  end
  def fields(include_deprecated:); end

  sig { abstract.returns(T.nilable(T::Array[Bluejay::Builtin::ObjectTypes::InputValue::Interface])) }
  def input_fields; end

  sig { abstract.returns(T.nilable(T::Array[Bluejay::Builtin::ObjectTypes::Type::Interface])) }
  def interfaces; end

  sig { abstract.returns(String) }
  def kind; end

  sig { abstract.returns(T.nilable(String)) }
  def name; end

  sig { abstract.returns(T.nilable(Bluejay::Builtin::ObjectTypes::Type::Interface)) }
  def of_type; end

  sig { abstract.returns(T.nilable(T::Array[Bluejay::Builtin::ObjectTypes::Type::Interface])) }
  def possible_types; end

  sig(:final) { returns(String) }
  def resolve_typename; end

  sig { abstract.returns(T.nilable(String)) }
  def specified_by_url; end
end
