# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rake-compiler` gem.
# Please instead update this file by running `bin/tapioca gem rake-compiler`.

# Define a series of tasks to aid in the compilation of Java extensions for
# gem developer/creators.
#
# source://rake-compiler//lib/rake/compiler_config.rb#1
module Rake
  extend ::FileUtils::StreamUtils_
  extend ::FileUtils
end

# source://rake-compiler//lib/rake/baseextensiontask.rb#11
class Rake::BaseExtensionTask < ::Rake::TaskLib
  # @return [BaseExtensionTask] a new instance of BaseExtensionTask
  # @yield [_self]
  # @yieldparam _self [Rake::BaseExtensionTask] the object that the method was called on
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#28
  def initialize(name = T.unsafe(nil), gem_spec = T.unsafe(nil)); end

  # Returns the value of attribute config_options.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#18
  def config_options; end

  # Sets the attribute config_options
  #
  # @param value the value to set the attribute config_options to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#18
  def config_options=(_arg0); end

  # source://rake-compiler//lib/rake/baseextensiontask.rb#48
  def define; end

  # Returns the value of attribute ext_dir.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#16
  def ext_dir; end

  # Sets the attribute ext_dir
  #
  # @param value the value to set the attribute ext_dir to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#16
  def ext_dir=(_arg0); end

  # Returns the value of attribute extra_options.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#20
  def extra_options; end

  # Sets the attribute extra_options
  #
  # @param value the value to set the attribute extra_options to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#20
  def extra_options=(_arg0); end

  # Returns the value of attribute extra_sources.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#21
  def extra_sources; end

  # Sets the attribute extra_sources
  #
  # @param value the value to set the attribute extra_sources to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#21
  def extra_sources=(_arg0); end

  # Returns the value of attribute gem_spec.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#14
  def gem_spec; end

  # Sets the attribute gem_spec
  #
  # @param value the value to set the attribute gem_spec to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#14
  def gem_spec=(_arg0); end

  # source://rake-compiler//lib/rake/baseextensiontask.rb#34
  def init(name = T.unsafe(nil), gem_spec = T.unsafe(nil)); end

  # Returns the value of attribute lib_dir.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#17
  def lib_dir; end

  # Sets the attribute lib_dir
  #
  # @param value the value to set the attribute lib_dir to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#17
  def lib_dir=(_arg0); end

  # Returns the value of attribute name.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#13
  def name; end

  # Sets the attribute name
  #
  # @param value the value to set the attribute name to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#13
  def name=(_arg0); end

  # source://rake-compiler//lib/rake/baseextensiontask.rb#24
  def platform; end

  # Sets the attribute platform
  #
  # @param value the value to set the attribute platform to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#22
  def platform=(_arg0); end

  # Returns the value of attribute source_pattern.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#19
  def source_pattern; end

  # Sets the attribute source_pattern
  #
  # @param value the value to set the attribute source_pattern to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#19
  def source_pattern=(_arg0); end

  # Returns the value of attribute tmp_dir.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#15
  def tmp_dir; end

  # Sets the attribute tmp_dir
  #
  # @param value the value to set the attribute tmp_dir to.
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#15
  def tmp_dir=(_arg0); end

  private

  # source://rake-compiler//lib/rake/baseextensiontask.rb#61
  def binary(platform = T.unsafe(nil)); end

  # @raise [NotImplementedError]
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#57
  def define_compile_tasks; end

  # source://rake-compiler//lib/rake/baseextensiontask.rb#75
  def source_files; end

  # source://rake-compiler//lib/rake/baseextensiontask.rb#79
  def warn_once(message); end

  # @return [Boolean]
  #
  # source://rake-compiler//lib/rake/baseextensiontask.rb#86
  def windows?; end
end

# source://rake-compiler//lib/rake/compiler_config.rb#2
class Rake::CompilerConfig
  # @return [CompilerConfig] a new instance of CompilerConfig
  #
  # source://rake-compiler//lib/rake/compiler_config.rb#3
  def initialize(config_path); end

  # source://rake-compiler//lib/rake/compiler_config.rb#8
  def find(ruby_version, gem_platform); end
end

# source://rake-compiler//lib/rake/extensiontask.rb#10
class Rake::ExtensionTask < ::Rake::BaseExtensionTask
  # source://rake-compiler//lib/rake/extensiontask.rb#41
  def binary(platform = T.unsafe(nil)); end

  # Returns the value of attribute config_includes.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#16
  def config_includes; end

  # Sets the attribute config_includes
  #
  # @param value the value to set the attribute config_includes to.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#16
  def config_includes=(_arg0); end

  # Returns the value of attribute config_script.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#11
  def config_script; end

  # Sets the attribute config_script
  #
  # @param value the value to set the attribute config_script to.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#11
  def config_script=(_arg0); end

  # Returns the value of attribute cross_compile.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#12
  def cross_compile; end

  # Sets the attribute cross_compile
  #
  # @param value the value to set the attribute cross_compile to.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#12
  def cross_compile=(_arg0); end

  # source://rake-compiler//lib/rake/extensiontask.rb#37
  def cross_compiling(&block); end

  # source://rake-compiler//lib/rake/extensiontask.rb#69
  def cross_config_options(for_platform = T.unsafe(nil)); end

  # Sets the attribute cross_config_options
  #
  # @param value the value to set the attribute cross_config_options to.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#14
  def cross_config_options=(_arg0); end

  # source://rake-compiler//lib/rake/extensiontask.rb#33
  def cross_platform; end

  # Sets the attribute cross_platform
  #
  # @param value the value to set the attribute cross_platform to.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#13
  def cross_platform=(_arg0); end

  # source://rake-compiler//lib/rake/extensiontask.rb#49
  def define; end

  # source://rake-compiler//lib/rake/extensiontask.rb#18
  def init(name = T.unsafe(nil), gem_spec = T.unsafe(nil)); end

  # source://rake-compiler//lib/rake/extensiontask.rb#82
  def make_makefile_cmd(root_path, tmp_path, extconf, siteconf_path, cross_platform); end

  # Returns the value of attribute no_native.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#15
  def no_native; end

  # Sets the attribute no_native
  #
  # @param value the value to set the attribute no_native to.
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#15
  def no_native=(_arg0); end

  private

  # source://rake-compiler//lib/rake/extensiontask.rb#534
  def compiled_files; end

  # source://rake-compiler//lib/rake/extensiontask.rb#538
  def compiles_cross_platform; end

  # source://rake-compiler//lib/rake/extensiontask.rb#126
  def define_compile_tasks(for_platform = T.unsafe(nil), ruby_ver = T.unsafe(nil)); end

  # source://rake-compiler//lib/rake/extensiontask.rb#361
  def define_cross_platform_tasks(for_platform); end

  # source://rake-compiler//lib/rake/extensiontask.rb#387
  def define_cross_platform_tasks_with_version(for_platform, ruby_ver); end

  # source://rake-compiler//lib/rake/extensiontask.rb#489
  def define_dummy_cross_platform_tasks; end

  # source://rake-compiler//lib/rake/extensiontask.rb#251
  def define_native_tasks(for_platform = T.unsafe(nil), ruby_ver = T.unsafe(nil), callback = T.unsafe(nil)); end

  # copy other gem files to staging directory
  #
  # source://rake-compiler//lib/rake/extensiontask.rb#104
  def define_staging_file_tasks(files, lib_path, stage_path, platf, ruby_ver); end

  # source://rake-compiler//lib/rake/extensiontask.rb#498
  def extconf; end

  # source://rake-compiler//lib/rake/extensiontask.rb#550
  def fake_rb(platform, version); end

  # source://rake-compiler//lib/rake/extensiontask.rb#519
  def find_make; end

  # source://rake-compiler//lib/rake/extensiontask.rb#502
  def make; end

  # source://rake-compiler//lib/rake/extensiontask.rb#542
  def natives_cross_platform; end

  # source://rake-compiler//lib/rake/extensiontask.rb#546
  def ruby_api_version(ruby_version); end
end
